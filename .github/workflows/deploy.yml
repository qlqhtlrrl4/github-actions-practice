# Workflow 에 이름
name: Github Actions 실행해보기

# Github Actions가 작동하는 방식은 Github에서 무언가가 발생했을 때 그때 이 Github Actions를 실행시키고 싶다.
# 어느 시점에, 어떤 경우에 이 Github Actions 코드를 실행시키고 싶은지를 설정하는 부분이다.
# main branches에 push가 됐을때 아래의 jobs 부분을 실행 시키겠다.
# 이 과정을 Event라고 한다
# Event : 실행 되는 시점을 설정
on:
  push:
    branches:
        - main

# 하나의 WorkFlow 는 1개 이상의 job으로 구성된다.
# 여러 job은 기본적으로 병렬적으로 수행된다.
jobs:
  # 여기에 붙이는 값은 임의대로 적어도된다.
  # Job을 식별하기 위한 id (값)
  My-Deploy-Job:
    # ubuntu 환경에서 가장 최신 버전을 선택하겠다. -> 운영체제를 선택하겠다.
    runs-on: ubuntu-latest

    # Step : 특정 작업을 수행하는 가장 작은 단위
    # workflow는 여러 개의 Job으로 구성되어 있다 -> 하나의 job은 여러 step으로 구성되어있다.
    steps:
        # step마다 이름을 정해줄수 있다.
      - name: Hello World 찍기
        # 실제 코드를 쓰는 부분인데 linux 명령어로 해야됨
        run: echo "Hello World"

      - name: 여러 명령어 문장 작성하기
        # 여러줄을 사용할 때는 | 를 사용하면 된다.
        run: |
          echo "Good"
          echo "Morining"

      - name: Github Actions 자체에 저장되어 있는 변수 사용해보기
        # $ => 실제 linux에서 변수를 나타내는 방식
        # $GITHUB_SHA : 지금 해당하는 Commit ID 를 의미한다.
        # $GITHUB_REPOSITORY : 지금 해당하는 Repository를 의미
        run: |
          echo $GITHUB_SHA
          echo $GITHUB_REPOSITORY
        # Github는 Secret값을 사용할 수 있는 기능을 만들어 놨다.
        # repository -> settings -> 좌측메뉴 Secrets and variables -> Actions에서 등록
    
      - name: 아무한테나 노출되면 안되는 값
        # Github에 등록한 secret 값은 아래와 같이 secrets. 으로 사용하면된다.
        run: |
          echo ${{ secrets.MY_NAME }}
          echo ${{ secrets.MY_HOBBY }}
          